@{
    ViewData["Title"] = "Brukere";
    ViewData.AddActivePage(ManageNavPages.Users);
}

<div id="app">

<a asp-action="CreateUser" class="btn btn-default">Opprett ny bruker</a>
<a asp-action="CreateManyUsers" class="btn btn-default">Opprett mange brukere</a>

<hr />

<!--Search users-->
<form v-on:submit.prevent class="form-inline" role="form">
  <div class="form-group has-feedback">
    <input type="text" class="form-control" id="search" placeholder="Search users" v-model="search">
    <span class="glyphicon glyphicon-search form-control-feedback"></span>
  </div>
</form>

<table class="table table-hover table-striped">
    <thead>
        <tr>
            <th>Brukernavn</th>
            <th>Epost</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <tr v-for="user in filteredUsers" v-cloak>
            <td>{{ user.userName }}</td>
            <td>{{ user.email }}</td>
            <td class="fit">
                <div class="dropdown">
                    <button id="more-btn" class="btn btn-default dropdown-toggle btn-sm" type="button" data-toggle="dropdown">
                        <span class="more-dot"></span>
                        <span class="more-dot"></span>
                        <span class="more-dot"></span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-right">
                        <li><a v-bind:href="'/User/Edit/' + user.id">Edit</a></li>
                        <li><a v-bind:href="'/User/Details/' + user.id">Details</a></li>
                        <li><a v-bind:href="'/User/Delete/' + user.id">Delete</a></li>
                    </ul>
                </div>
            </td>
        </tr>
    </tbody>
</table>
</div>

@section Scripts {
<script>
var app = new Vue({
    el: '#app',
    data: {
        users: [],
        search: ''
    },
    created: function () {
        var self = this;

        // Fetch list of users
        axios.get('/api/users')
        .then(function (response) { 
        self.users = response.data; 
        });    
    },
    computed: {
        filteredUsers: function() {
            return this.users.filter((user) => {
                return user.userName.toLowerCase().match(this.search.toLowerCase());
            })
        }
    }
})
</script>
}